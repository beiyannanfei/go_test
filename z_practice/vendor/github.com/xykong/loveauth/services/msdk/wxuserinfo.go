/**
 * Generated by the loveworld utility tools.  DO NOT EDIT!
 * Source: wxuserinfo
 * User: xy.kong@gmail.com
 * DateTime: 2018-03-27 12:17:25.095093 +0800 CST m=+1.454767959
 */
package msdk

import (
	"github.com/sirupsen/logrus"
	"encoding/json"
	"github.com/xykong/loveauth/errors"
)

//
// 应答: [微信]个人信息(非精品业务使用)
// swagger:response DoWXUserInfoRsp
// noinspection ALL
type DoWXUserInfoRsp struct {
	// in: body
	Body struct {
		//
		// 返回码  0：正确，其它：失败
		//
		Ret int `json:"ret"`
		//
		// ret非0，则表示“错误码，错误提示”，详细注释参见错误码描述
		//
		Msg string `json:"msg"`
		//
		// 昵称
		//
		Nickname string `json:"nickname"`
		//
		// 用户头像URL,必须在URL后追加以下参数/0，/132，/96，/64，分别获得不同规格的图片:原始图片(/0)、132132(/132)、9696(/96)、6464(/64)、4646(/46)
		//
		Picture string `json:"picture"`
		//
		// 省份
		//
		Province string `json:"province"`
		//
		// 城市
		//
		City string `json:"city"`
		//
		// 国家
		//
		Country string `json:"country"`
		//
		// 性别:1男2女,用户未填则默认1男,0表示未知
		//
		Sex string `json:"sex"`
		//
		// 用户统一标识。针对一个微信开放平台帐号下的应用，同一用户的unionid是唯一的
		//
		UnionId string `json:"unionid"`
		//
		// 用户特权信息，json 数组，如微信沃卡用户为（chinaunicom）只返回首位openid对应的沃卡信息，其后的openid无法获取到沃卡信息
		//
		Privilege []interface{} `json:"privilege"`
		//
		// 语言(有可能为空)
		//
		Language string `json:"language"`
		//
		// 通过GPS获得的城市
		//
		GpsCity string `json:"gpsCity"`
	}
}

func WXUserInfo(openId string, token string) (*DoWXUserInfoRsp, error) {

	//noinspection ALL
	module := "/relation/wxuserinfo"

	platform := QQ

	//noinspection SpellCheckingInspection
	body := map[string]interface{}{
		"appid":       AppId(platform),
		"accessToken": token,
		"openid":      openId,
	}

	//noinspection SpellCheckingInspection
	resp, err := PostRequestRaw(openId, platform, module, body)

	if err != nil {
		logrus.WithFields(logrus.Fields{
			"error":  err,
			"module": module,
			"body":   body,
		}).Error("WXUserInfo failed.")
		return nil, err
	}

	var data DoWXUserInfoRsp
	if err := json.Unmarshal(resp, &data.Body); err != nil {
		logrus.WithFields(logrus.Fields{
			"error":  err,
			"module": module,
			"body":   body,
		}).Error("WXUserInfo failed.")
		return nil, err
	}

	if data.Body.Ret != 0 {
		return nil, errors.NewCode(errors.Failed)
	}

	return &data, nil
}
