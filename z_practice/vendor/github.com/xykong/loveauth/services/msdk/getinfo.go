/**
 * Generated by the loveworld utility tools.  DO NOT EDIT!
 * Source: getinfo
 * User: xy.kong@gmail.com
 * DateTime: 2018-03-27 12:17:25.09853 +0800 CST m=+1.458205799
 */
package msdk

import (
	"github.com/sirupsen/logrus"
	"encoding/json"
	"github.com/xykong/loveauth/errors"
)

//
// 应答: 查询免流量
// swagger:response DoGetInfoRsp
// noinspection ALL
type DoGetInfoRsp struct {
	// in: body
	Body struct {
		//
		// 返回码  0：正确，其它：失败
		//
		Ret int `json:"ret"`
		//
		// ret非0，则表示“错误码，错误提示”，详细注释参见错误码描述
		//
		Msg string `json:"msg"`
		//
		// 免流量信息
		//
		FreeFlowInfo map[string]interface{} `json:"freeFlowInfo"`
		//
		// string，游戏当前的所有免流域名或者ip信息
		//
		IpList string `json:"ipList"`
		//
		// int，是否为免流，如果为0表示非免流用户，为1表示为免流用户
		//
		IsFree int `json:"isFree"`
		//
		// int，当前用户订购关系的运营商类型，0表示联通，1表示电信，2表示移动
		//
		CcType int `json:"ccType"`
		//
		// string，游戏当前配置的联通免流域名或者ip信息
		//
		LtList string `json:"ltList"`
		//
		// string，游戏当前配置的电信免流域名或者ip信息
		//
		DxList string `json:"dxList"`
		//
		// string，游戏当前配置的移动免流域名或者ip信息
		//
		YdList string `json:"ydList"`
		//
		// int，当前返回信息的过期时间，表示调用方需要过expire时间需要再次查询该用户的免流信息
		//
		Expire int `json:"expire"`
	}
}

func GetInfo(openId string, token string) (*DoGetInfoRsp, error) {

	//noinspection ALL
	module := "/freeflow/getinfo"

	platform := QQ

	//noinspection SpellCheckingInspection
	body := map[string]interface{}{
		"openid": openId,
	}

	//noinspection SpellCheckingInspection
	resp, err := PostRequestRaw(openId, platform, module, body)

	if err != nil {
		logrus.WithFields(logrus.Fields{
			"error":  err,
			"module": module,
			"body":   body,
		}).Error("GetInfo failed.")
		return nil, err
	}

	var data DoGetInfoRsp
	if err := json.Unmarshal(resp, &data.Body); err != nil {
		logrus.WithFields(logrus.Fields{
			"error":  err,
			"module": module,
			"body":   body,
		}).Error("GetInfo failed.")
		return nil, err
	}

	if data.Body.Ret != 0 {
		return nil, errors.NewCode(errors.Failed)
	}

	return &data, nil
}
