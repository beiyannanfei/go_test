/**
 * Generated by the loveworld utility tools.  DO NOT EDIT!
 * Source: qqprofile
 * User: xy.kong@gmail.com
 * DateTime: 2018-03-27 12:17:25.091815 +0800 CST m=+1.451490324
 */
package msdk

import (
	"github.com/sirupsen/logrus"
	"encoding/json"
	"github.com/xykong/loveauth/errors"
)

//
// 应答: [手Q]用户信息
// swagger:response DoQQProfileRsp
// noinspection ALL
type DoQQProfileRsp struct {
	// in: body
	Body struct {
		//
		// 返回码  0：正确，其它：失败
		//
		Ret int `json:"ret"`
		//
		// ret非0，则表示“错误码，错误提示”，详细注释参见错误码描述
		//
		Msg string `json:"msg"`
		//
		// 用户在QQ空间的昵称（和手机QQ昵称是同步的）
		//
		NickName string `json:"nickName"`
		//
		// 性别 如果获取不到则默认返回"男"
		//
		Gender string `json:"gender"`
		//
		// 大小为40×40像素的QQ头像URL
		//
		Picture40 string `json:"picture40"`
		//
		// 大小为100×100像素的QQ头像URL，需要注意，不是所有的用户都拥有QQ的100x100的头像，但40x40像素则是一定会有
		//
		Picture100 string `json:"picture100"`
		//
		// 是否是黄钻用户，0表示没有黄钻
		//
		YellowVIP int `json:"yellow_vip"`
		//
		// 黄钻等级
		//
		YellowVIPLevel int `json:"yellow_vip_level"`
		//
		// 是否是年费黄钻用户，0表示否
		//
		YellowYearVIP int `json:"yellow_year_vip"`
		//
		// is_lost为1的时候表示获取的数据做了降级处理：此时业务层有缓存数据时，可以先用缓存数据；如果没有的话，再使用当前的数据，并且该标志打上1时，不要对这个数据进行缓存
		//
		IsLost string `json:"is_lost"`
	}
}

func QQProfile(openId string, token string) (*DoQQProfileRsp, error) {

	//noinspection ALL
	module := "/relation/qqprofile"

	platform := QQ

	//noinspection SpellCheckingInspection
	body := map[string]interface{}{
		"appid":       AppId(platform),
		"openid":      openId,
		"accessToken": token,
	}

	//noinspection SpellCheckingInspection
	resp, err := PostRequestRaw(openId, platform, module, body)

	if err != nil {
		logrus.WithFields(logrus.Fields{
			"error":  err,
			"module": module,
			"body":   body,
		}).Error("QQProfile failed.")
		return nil, err
	}

	var data DoQQProfileRsp
	if err := json.Unmarshal(resp, &data.Body); err != nil {
		logrus.WithFields(logrus.Fields{
			"error":  err,
			"module": module,
			"body":   body,
		}).Error("QQProfile failed.")
		return nil, err
	}

	if data.Body.Ret != 0 {
		return nil, errors.NewCode(errors.Failed)
	}

	return &data, nil
}
