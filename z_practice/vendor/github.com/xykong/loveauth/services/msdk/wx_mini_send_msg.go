/**
 * Generated by the loveworld utility tools.  DO NOT EDIT!
 * Source: wx_mini_send_msg
 * User: xy.kong@gmail.com
 * DateTime: 2018-03-27 12:17:25.095551 +0800 CST m=+1.455225927
 */
package msdk

import (
	"github.com/sirupsen/logrus"
	"encoding/json"
	"github.com/xykong/loveauth/errors"
)

//
// 应答: [微信]发送小程序消息
// swagger:response DoWXMiniSendMsgRsp
// noinspection ALL
type DoWXMiniSendMsgRsp struct {
	// in: body
	Body struct {
		//
		// 返回码  0：正确，其它：失败
		//
		Ret int `json:"ret"`
		//
		// ret非0，则表示“错误码，错误提示”，详细注释参见错误码描述
		//
		Msg string `json:"msg"`
	}
}

func WXMiniSendMsg(openId string, token string) (*DoWXMiniSendMsgRsp, error) {

	//noinspection ALL
	module := "/relation/wx_mini_send_msg"

	platform := QQ

	//noinspection SpellCheckingInspection
	body := map[string]interface{}{
		"touser":         "",
		"weapp_id":       "",
		"path":           "",
		"env_version":    "",
		"pic_url":        "",
		"title":          "",
		"media_tag_name": "",
	}

	//noinspection SpellCheckingInspection
	resp, err := PostRequestRaw(openId, platform, module, body)

	if err != nil {
		logrus.WithFields(logrus.Fields{
			"error":  err,
			"module": module,
			"body":   body,
		}).Error("WXMiniSendMsg failed.")
		return nil, err
	}

	var data DoWXMiniSendMsgRsp
	if err := json.Unmarshal(resp, &data.Body); err != nil {
		logrus.WithFields(logrus.Fields{
			"error":  err,
			"module": module,
			"body":   body,
		}).Error("WXMiniSendMsg failed.")
		return nil, err
	}

	if data.Body.Ret != 0 {
		return nil, errors.NewCode(errors.Failed)
	}

	return &data, nil
}
